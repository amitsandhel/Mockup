#pragma checksum "C:\Users\sandhela\source\repos\Mockup\Pages\MockTasha.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e605018ae9303eb7eb01455b3bbbd64a6db5eef3"
// <auto-generated/>
#pragma warning disable 1591
namespace MockUp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\sandhela\source\repos\Mockup\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\sandhela\source\repos\Mockup\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\sandhela\source\repos\Mockup\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\sandhela\source\repos\Mockup\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\sandhela\source\repos\Mockup\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\sandhela\source\repos\Mockup\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\sandhela\source\repos\Mockup\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\sandhela\source\repos\Mockup\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\sandhela\source\repos\Mockup\_Imports.razor"
using MockUp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\sandhela\source\repos\Mockup\_Imports.razor"
using MockUp.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\sandhela\source\repos\Mockup\Pages\MockTasha.razor"
using Blazor.Diagrams.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\sandhela\source\repos\Mockup\Pages\MockTasha.razor"
using Blazor.Diagrams.Core.Geometry;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\sandhela\source\repos\Mockup\Pages\MockTasha.razor"
using Blazor.Diagrams.Core.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\sandhela\source\repos\Mockup\Pages\MockTasha.razor"
using Blazor.Diagrams.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\sandhela\source\repos\Mockup\Pages\MockTasha.razor"
using Blazor.Diagrams.Components.Renderers;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/mock4")]
    public partial class MockTasha : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h1>MOckup with Tasha</h1>\r\n\r\n\r\n");
            __builder.OpenElement(1, "div");
            __builder.AddAttribute(2, "style", "width:100vw; height: 100vh");
            __Blazor.MockUp.Pages.MockTasha.TypeInference.CreateCascadingValue_0(__builder, 3, 4, 
#nullable restore
#line 19 "C:\Users\sandhela\source\repos\Mockup\Pages\MockTasha.razor"
                         Diagram

#line default
#line hidden
#nullable disable
            , 5, (__builder2) => {
                __builder2.OpenComponent<Blazor.Diagrams.Components.DiagramCanvas>(6);
                __builder2.CloseComponent();
            }
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(7, "\r\n\r\n\r\n\r\n\r\n");
            __builder.AddMarkupContent(8, "<div class=\"accordion\" id=\"accordionExample\"><div class=\"accordion-item\"><h2 class=\"accordion-header\" id=\"headingOne\"><button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button></h2>\r\n    <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\"><div class=\"accordion-body\"><strong>This is the first item\'s accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div></div></div>\r\n  <div class=\"accordion-item\"><h2 class=\"accordion-header\" id=\"headingTwo\"><button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button></h2>\r\n    <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\"><div class=\"accordion-body\"><strong>This is the second item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div></div></div>\r\n  <div class=\"accordion-item\"><h2 class=\"accordion-header\" id=\"headingThree\"><button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button></h2>\r\n    <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\"><div class=\"accordion-body\"><strong>This is the third item\'s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It\'s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div></div></div></div>");
        }
        #pragma warning restore 1998
    }
}
namespace __Blazor.MockUp.Pages.MockTasha
{
    #line hidden
    internal static class TypeInference
    {
        public static void CreateCascadingValue_0<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, TValue __arg0, int __seq1, global::Microsoft.AspNetCore.Components.RenderFragment __arg1)
        {
        __builder.OpenComponent<global::Microsoft.AspNetCore.Components.CascadingValue<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Value", __arg0);
        __builder.AddAttribute(__seq1, "ChildContent", __arg1);
        __builder.CloseComponent();
        }
    }
}
#pragma warning restore 1591
